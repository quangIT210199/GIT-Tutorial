Khái niệm
Repository: là nơi share code làm việc chung
Working directory: là local mình làm và khi nào muốn cho nên Repository
phải thông quang Index

Quy trình làm việc nhóm
Pull request:
1. git checkout -b <feature_branch> : chuyển branch
2.git push origin <branch> : push branch lên để ngta ktra code
3.create a pull request on Github : tạo pull request
4.review code
	4.1.review code online ( trên github) 
	4.2.fetch branch into local to test offline (optinal)
	- git fetch origin <tên branch mình muốn mang về local ktra>
Nhìn chung, git pull thực hiện git fetch theo sau là git merge


Khi bạn sử dụng pull, Git sẽ cố gắng tự động thực hiện công việc của bạn cho bạn. Vì vậy Git sẽ merger bất kỳ commit ở trong nhánh bạn đang làm việc. Tự động merger các commit mà không cho phép bạn xem chúng trước. Nếu bạn không quản lý chặt chẽ các branch của mình, bạn có thể gặp phải conflicts thường xuyên.
Khi bạn fetch, Git tập hợp bất kỳ commit nào từ target branch không tồn tại trong nhánh hiện tại của bạn và lưu trữ chúng trong local repository của bạn. Tuy nhiên, nó không merger chúng với nhánh hiện tại của bạn. Điều này đặc biệt hữu ích nếu bạn cần cập nhật kho lưu trữ của bạn, nhưng đang làm việc trên project rất dễ có thể bị ảnh hưởng nếu bạn cập nhật các file của mình. Để merger các commit vào nhánh chính của bạn, bạn sử dụng merger.
	4.3.approve the pull request ( chấp nhận pull request)
5.merge to master

Các lệnh cơ bản:
- git init : khởi tạo project
- git add : thêm file mà mình muốn chuẩn bị commit lên
- git commit -m 'Tin nhắn là mình muốn để'
- git status : trạng thái

Xem thông tin
= git log : xem lịch sử và id
- git show : để xem thông tin thông tin
- git diff : để xem những file Modify (bị sửa đổi nhưng chưa commit lên bên Working directory)

Các thuật ngữ
- Working directory: file đang làm việc và bị thay đổi
- Staging Area:Sau khi add thì các file được đưa lên đây (file xanh là đang ở), chuẩn bị để commit
- git repository : Lưu tập hợp các commit

Checkout và Reset : được sử dụng nhiều cách
- git checkout : xóa bỏ thay đổi 1 số file(Modify) ở WorkingDirectory
- git reset : bỏ khỏỉ StagingArea sau khi add lên

Branching & Merging: Tạo nhánh và ghép nhánh
Khi init Repository thì đã tạo ra nhánh master
- git branch : xem nhánh
- gitk : xem giao diện GUI

- git checkout -b <branch> : thêm branch mới và sử dụng luôn
- git checkout <branch> : chuyển đến branch muốn dùng
- git merge : muốn xác nhập branch khác vào 1 branch nào đấy A <--- B
git checkout A : vào A
git merge B : dùng B xác nhập A
- git branch -D <branch> : xóa branch

Git reset : Để undo cái commit k vừa ý
- git reset --soft <to_commit(lấy id của nó)> : trở lại commit mình yêu cầu , cho những tk sau nó vào Starging Area
- git reset --mixed <to_commit(lấy id của nó)> : trở lại commit mình yêu cầu, cho những tk sau nó vào Working Directory
- git reset --hard <to_commit(lấy id của nó)> : xóa những tk commit sau tk mình chọn

Git revert: Thấy commit nào đấy vài commit, muốn bỏ nó đi. Nó sẽ sửa hết các commit có liên quan
- git revert <commit>

File .git ignore sẽ nằm trong project. mục đích bỏ qua 1 số file mà k muốn commit và hiện ra khi gõ status
- tạo file .gitignore rồi ghi tên các file mình muốn vào.
 ví dụ như bên NodeJS có file Package.json để lưu các thư viện thêm vào thì chỉ cần gửi file package chứ k cần phải
gửi toàn bộ file. vì ngta chạy file package.json là tải các thư viện kia

Tạo Repository sau đó lấy link rồi gõ lệnh trên git bash
- git remote add origin <link>
- git remote -v
- chạy push bằng: git push -u origin master

Làm sao để  đổi tk github đang dùng sang tk khác trong git bash, giúp em với..
em có thể dùng ssh key để connect đến git, 1 máy có thể có nhiều key

Git clone & pull
- git clone <link repository>: copy cái repository trên github về, để làm việc chung repository
- git pull <link repository>: Để cập nhật mới nhất từ repository về